# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddQuestionInput {
  body: String!
  question: String!
  tags: [String!]!
}

input AnswerQuestionInput {
  answer: String!
  id: String!
}

input DownvoteQuestionInput {
  id: String!
}

input GetQuestionInput {
  id: String!
}

input GetQuestionsInput {
  orderBy: QuestionOrderBy
  page: Float
  pageSize: Float
  tag: String
}

type Mutation {
  addQuestion(input: AddQuestionInput!): Question!
  answerQuestion(input: AnswerQuestionInput!): Question!
  downvoteQuestion(input: DownvoteQuestionInput!): Question!
  signIn(input: SignInInput!): Result!
  signOut: Result!
  signUp(input: SignUpInput!): Result!
  upvoteQuestion(input: UpvoteQuestionInput!): Question!
  viewQuestion(input: ViewQuestionInput!): Question!
}

type Query {
  profile: User!
  question(input: GetQuestionInput!): Question!
  questionCount: Float!
  questionsPage(input: GetQuestionsInput): QuestionsPage!
  tags: [Tag!]!
}

type Question {
  answers: Float!
  body: String!
  createdAtRelative: String!
  excerpt: String!
  hasUserDownvoted: Boolean!
  hasUserUpvoted: Boolean!
  id: ID!
  isUserAuthor: Boolean!
  question: String!
  questionAnswers: [QuestionAnswer!]!
  tags: [Tag!]!
  user: User!
  views: Float!
  votes: Float!
}

type QuestionAnswer {
  body: String!
  id: ID!
}

enum QuestionOrderBy {
  ACTIVE
  NEW
  VOTES
}

type QuestionsPage {
  pageCount: Float!
  questionCount: Float!
  questions: [Question!]!
}

type Result {
  ok: Boolean!
}

input SignInInput {
  password: String!
  username: String!
}

input SignUpInput {
  email: String!
  password: String!
  username: String!
}

type Tag {
  id: ID!
  name: String!
  questionCount: Float!
  questions: [Question!]!
}

input UpvoteQuestionInput {
  id: String!
}

type User {
  email: String!
  id: ID!
  username: String!
}

input ViewQuestionInput {
  id: String!
}
